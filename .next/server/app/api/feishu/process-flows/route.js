(()=>{var e={};e.id=794,e.ids=[794],e.modules={399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},1426:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>f,serverHooks:()=>x,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{DELETE:()=>l,GET:()=>d,POST:()=>p,PUT:()=>c});var o=t(2412),n=t(4293),a=t(4147),i=t(7856);let u=[];async function d(e){try{let r=new URL(e.url),t=r.searchParams.get("flowId"),s=r.searchParams.get("businessFlowId");if(t){let e=u.find(e=>e.metadata?.id===t);if(!e)return i.NextResponse.json({error:"Process flow not found"},{status:404});return i.NextResponse.json(e)}if(s){let e=u.filter(e=>e.metadata?.businessFlowId===s);return i.NextResponse.json({flows:e})}return i.NextResponse.json({flows:u})}catch(e){return console.error("Error getting process flows:",e),i.NextResponse.json({error:"Failed to get process flows",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function p(e){try{let r=await e.json();if(!r.metadata?.name||!r.metadata?.type)return i.NextResponse.json({error:"Missing required fields (name or type)"},{status:400});return r.metadata?.id||(r.metadata.id=`flow_${Date.now()}`),r.metadata.createdAt=new Date().toISOString(),r.metadata.updatedAt=new Date().toISOString(),u.push(r),i.NextResponse.json(r,{status:201})}catch(e){return console.error("Error creating process flow:",e),i.NextResponse.json({error:"Failed to create process flow",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function c(e){try{let r=await e.json();if(!r.metadata?.id)return i.NextResponse.json({error:"Missing required field (id)"},{status:400});let t=u.findIndex(e=>e.metadata?.id===r.metadata.id);if(-1===t)return i.NextResponse.json({error:"Process flow not found"},{status:404});return r.metadata.updatedAt=new Date().toISOString(),u[t]=r,i.NextResponse.json(r)}catch(e){return console.error("Error updating process flow:",e),i.NextResponse.json({error:"Failed to update process flow",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let r=new URL(e.url).searchParams.get("flowId");if(!r)return i.NextResponse.json({error:"Missing required parameter (flowId)"},{status:400});let t=u.findIndex(e=>e.metadata?.id===r);if(-1===t)return i.NextResponse.json({error:"Process flow not found"},{status:404});return u.splice(t,1),i.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting process flow:",e),i.NextResponse.json({error:"Failed to delete process flow",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let f=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/feishu/process-flows/route",pathname:"/api/feishu/process-flows",filename:"route",bundlePath:"app/api/feishu/process-flows/route"},resolvedPagePath:"D:\\Code\\Business_Process_Management_Platform\\app\\api\\feishu\\process-flows\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:m,serverHooks:x}=f;function g(){return(0,a.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:m})}},5303:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[267,814],()=>t(1426));module.exports=s})();