/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/feishu/websites/batch/route";
exports.ids = ["app/api/feishu/websites/batch/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&page=%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute.ts&appDir=D%3A%5CCode%5CBusiness_Process_Management_Platform%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCode%5CBusiness_Process_Management_Platform&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&page=%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute.ts&appDir=D%3A%5CCode%5CBusiness_Process_Management_Platform%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCode%5CBusiness_Process_Management_Platform&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Code_Business_Process_Management_Platform_app_api_feishu_websites_batch_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/feishu/websites/batch/route.ts */ \"(rsc)/./app/api/feishu/websites/batch/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/feishu/websites/batch/route\",\n        pathname: \"/api/feishu/websites/batch\",\n        filename: \"route\",\n        bundlePath: \"app/api/feishu/websites/batch/route\"\n    },\n    resolvedPagePath: \"D:\\\\Code\\\\Business_Process_Management_Platform\\\\app\\\\api\\\\feishu\\\\websites\\\\batch\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Code_Business_Process_Management_Platform_app_api_feishu_websites_batch_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZmZWlzaHUlMkZ3ZWJzaXRlcyUyRmJhdGNoJTJGcm91dGUmcGFnZT0lMkZhcGklMkZmZWlzaHUlMkZ3ZWJzaXRlcyUyRmJhdGNoJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZmVpc2h1JTJGd2Vic2l0ZXMlMkZiYXRjaCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDQ29kZSU1Q0J1c2luZXNzX1Byb2Nlc3NfTWFuYWdlbWVudF9QbGF0Zm9ybSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RCUzQSU1Q0NvZGUlNUNCdXNpbmVzc19Qcm9jZXNzX01hbmFnZW1lbnRfUGxhdGZvcm0maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQzJDO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsid2VicGFjazovL2J1c2luZXNzLXByb2Nlc3MtbWFuYWdlbWVudC1wbGF0Zm9ybS8/Y2VlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcQ29kZVxcXFxCdXNpbmVzc19Qcm9jZXNzX01hbmFnZW1lbnRfUGxhdGZvcm1cXFxcYXBwXFxcXGFwaVxcXFxmZWlzaHVcXFxcd2Vic2l0ZXNcXFxcYmF0Y2hcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2ZlaXNodS93ZWJzaXRlcy9iYXRjaC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ZlaXNodS93ZWJzaXRlcy9iYXRjaFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZmVpc2h1L3dlYnNpdGVzL2JhdGNoL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiRDpcXFxcQ29kZVxcXFxCdXNpbmVzc19Qcm9jZXNzX01hbmFnZW1lbnRfUGxhdGZvcm1cXFxcYXBwXFxcXGFwaVxcXFxmZWlzaHVcXFxcd2Vic2l0ZXNcXFxcYmF0Y2hcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&page=%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute.ts&appDir=D%3A%5CCode%5CBusiness_Process_Management_Platform%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCode%5CBusiness_Process_Management_Platform&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/feishu/websites/batch/route.ts":
/*!************************************************!*\
  !*** ./app/api/feishu/websites/batch/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _app_lib_localStorageService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../app/lib/localStorageService */ \"(rsc)/./app/lib/localStorageService.ts\");\n\n\nasync function POST(request) {\n    try {\n        // Parse the request body\n        const data = await request.json();\n        // Validate that the data is an array\n        if (!Array.isArray(data)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid request format. Expected an array of websites.'\n            }, {\n                status: 400\n            });\n        }\n        // Call the batch create function\n        const newWebsites = await (0,_app_lib_localStorageService__WEBPACK_IMPORTED_MODULE_1__.batchCreateWebsites)(data);\n        // Return the newly created websites\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            websites: newWebsites,\n            count: newWebsites.length\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error('Error creating websites in batch:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Failed to create websites'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2ZlaXNodS93ZWJzaXRlcy9iYXRjaC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDc0M7QUFHMUUsZUFBZUUsS0FBS0MsT0FBZ0I7SUFDekMsSUFBSTtRQUNGLHlCQUF5QjtRQUN6QixNQUFNQyxPQUFPLE1BQU1ELFFBQVFFLElBQUk7UUFFL0IscUNBQXFDO1FBQ3JDLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxPQUFPO1lBQ3hCLE9BQU9KLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO2dCQUFFRyxPQUFPO1lBQXlELEdBQ2xFO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxpQ0FBaUM7UUFDakMsTUFBTUMsY0FBYyxNQUFNVCxpRkFBbUJBLENBQUNHO1FBRTlDLG9DQUFvQztRQUNwQyxPQUFPSixxREFBWUEsQ0FBQ0ssSUFBSSxDQUN0QjtZQUNFTSxTQUFTO1lBQ1RDLFVBQVVGO1lBQ1ZHLE9BQU9ILFlBQVlJLE1BQU07UUFDM0IsR0FDQTtZQUFFTCxRQUFRO1FBQUk7SUFFbEIsRUFBRSxPQUFPRCxPQUFPO1FBQ2RPLFFBQVFQLEtBQUssQ0FBQyxxQ0FBcUNBO1FBQ25ELE9BQU9SLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO1lBQUVNLFNBQVM7WUFBT0gsT0FBTztRQUE0QixHQUNyRDtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2J1c2luZXNzLXByb2Nlc3MtbWFuYWdlbWVudC1wbGF0Zm9ybS8uL2FwcC9hcGkvZmVpc2h1L3dlYnNpdGVzL2JhdGNoL3JvdXRlLnRzP2ZlZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBiYXRjaENyZWF0ZVdlYnNpdGVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vYXBwL2xpYi9sb2NhbFN0b3JhZ2VTZXJ2aWNlJztcclxuaW1wb3J0IHsgV2Vic2l0ZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2FwcC90eXBlcy93ZWJzaXRlJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgLy8gUGFyc2UgdGhlIHJlcXVlc3QgYm9keVxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGF0ZSB0aGF0IHRoZSBkYXRhIGlzIGFuIGFycmF5XHJcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdJbnZhbGlkIHJlcXVlc3QgZm9ybWF0LiBFeHBlY3RlZCBhbiBhcnJheSBvZiB3ZWJzaXRlcy4nIH0sIFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBDYWxsIHRoZSBiYXRjaCBjcmVhdGUgZnVuY3Rpb25cclxuICAgIGNvbnN0IG5ld1dlYnNpdGVzID0gYXdhaXQgYmF0Y2hDcmVhdGVXZWJzaXRlcyhkYXRhKTtcclxuICAgIFxyXG4gICAgLy8gUmV0dXJuIHRoZSBuZXdseSBjcmVhdGVkIHdlYnNpdGVzXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgXHJcbiAgICAgICAgc3VjY2VzczogdHJ1ZSwgXHJcbiAgICAgICAgd2Vic2l0ZXM6IG5ld1dlYnNpdGVzLCBcclxuICAgICAgICBjb3VudDogbmV3V2Vic2l0ZXMubGVuZ3RoIFxyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogMjAxIH1cclxuICAgICk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHdlYnNpdGVzIGluIGJhdGNoOicsIGVycm9yKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdGYWlsZWQgdG8gY3JlYXRlIHdlYnNpdGVzJyB9LCBcclxuICAgICAgeyBzdGF0dXM6IDUwMCB9XHJcbiAgICApO1xyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiYmF0Y2hDcmVhdGVXZWJzaXRlcyIsIlBPU1QiLCJyZXF1ZXN0IiwiZGF0YSIsImpzb24iLCJBcnJheSIsImlzQXJyYXkiLCJlcnJvciIsInN0YXR1cyIsIm5ld1dlYnNpdGVzIiwic3VjY2VzcyIsIndlYnNpdGVzIiwiY291bnQiLCJsZW5ndGgiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/feishu/websites/batch/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/localStorageService.ts":
/*!****************************************!*\
  !*** ./app/lib/localStorageService.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchCreateAssistantItems: () => (/* binding */ batchCreateAssistantItems),\n/* harmony export */   batchCreateBusinessFlows: () => (/* binding */ batchCreateBusinessFlows),\n/* harmony export */   batchCreateProjects: () => (/* binding */ batchCreateProjects),\n/* harmony export */   batchCreateResources: () => (/* binding */ batchCreateResources),\n/* harmony export */   batchCreateWebsites: () => (/* binding */ batchCreateWebsites),\n/* harmony export */   createAssistantItem: () => (/* binding */ createAssistantItem),\n/* harmony export */   createBusinessFlow: () => (/* binding */ createBusinessFlow),\n/* harmony export */   createProject: () => (/* binding */ createProject),\n/* harmony export */   createResource: () => (/* binding */ createResource),\n/* harmony export */   createWebsite: () => (/* binding */ createWebsite),\n/* harmony export */   deleteProject: () => (/* binding */ deleteProject),\n/* harmony export */   deleteResource: () => (/* binding */ deleteResource),\n/* harmony export */   deleteWebsite: () => (/* binding */ deleteWebsite),\n/* harmony export */   getAssistantItems: () => (/* binding */ getAssistantItems),\n/* harmony export */   getBusinessFlows: () => (/* binding */ getBusinessFlows),\n/* harmony export */   getProjects: () => (/* binding */ getProjects),\n/* harmony export */   getResources: () => (/* binding */ getResources),\n/* harmony export */   getWebsites: () => (/* binding */ getWebsites),\n/* harmony export */   initializeLocalStorage: () => (/* binding */ initializeLocalStorage),\n/* harmony export */   updateProject: () => (/* binding */ updateProject),\n/* harmony export */   updateResource: () => (/* binding */ updateResource),\n/* harmony export */   updateWebsite: () => (/* binding */ updateWebsite)\n/* harmony export */ });\n// Constants for localStorage keys\nconst WEBSITES_KEY = 'websites';\nconst ASSISTANT_ITEMS_KEY = 'assistantItems';\nconst PROJECTS_KEY = 'projects';\nconst RESOURCES_KEY = 'resources';\nconst BUSINESS_FLOWS_KEY = 'businessFlows';\nconst DASHBOARD_KEY = 'dashboard';\nconst INITIALIZATION_KEY = 'storageInitialized';\n// Storage initialization function\nconst initializeLocalStorage = ()=>{\n    if (true) return;\n    try {\n        // Check if localStorage is already initialized\n        const isInitialized = localStorage.getItem(INITIALIZATION_KEY);\n        if (isInitialized === 'true') return;\n        // Initialize each feature with empty arrays if they don't exist\n        if (!localStorage.getItem(WEBSITES_KEY)) {\n            localStorage.setItem(WEBSITES_KEY, JSON.stringify([]));\n        }\n        if (!localStorage.getItem(ASSISTANT_ITEMS_KEY)) {\n            localStorage.setItem(ASSISTANT_ITEMS_KEY, JSON.stringify([]));\n        }\n        if (!localStorage.getItem(PROJECTS_KEY)) {\n            localStorage.setItem(PROJECTS_KEY, JSON.stringify([]));\n        }\n        if (!localStorage.getItem(RESOURCES_KEY)) {\n            localStorage.setItem(RESOURCES_KEY, JSON.stringify([]));\n        }\n        if (!localStorage.getItem(BUSINESS_FLOWS_KEY)) {\n            localStorage.setItem(BUSINESS_FLOWS_KEY, JSON.stringify([]));\n        }\n        if (!localStorage.getItem(DASHBOARD_KEY)) {\n            localStorage.setItem(DASHBOARD_KEY, JSON.stringify({\n                // Default dashboard data\n                stats: {\n                    businessFlows: 0,\n                    projects: 0,\n                    resources: 0\n                }\n            }));\n        }\n        // Mark storage as initialized\n        localStorage.setItem(INITIALIZATION_KEY, 'true');\n        console.log('LocalStorage initialized successfully');\n    } catch (error) {\n        console.error('Error initializing localStorage:', error);\n    }\n};\n// Website service functions\nconst getWebsites = async ()=>{\n    if (true) return [];\n    initializeLocalStorage(); // Ensure storage is initialized\n    try {\n        const websitesJson = localStorage.getItem(WEBSITES_KEY);\n        return websitesJson ? JSON.parse(websitesJson) : [];\n    } catch (error) {\n        console.error('Error getting websites from localStorage:', error);\n        return [];\n    }\n};\nconst createWebsite = async (website)=>{\n    if (true) {\n        return {\n            ...website,\n            id: `server-mock-${Date.now()}`\n        };\n    }\n    initializeLocalStorage(); // Ensure storage is initialized\n    const websites = await getWebsites();\n    const newWebsite = {\n        ...website,\n        id: `web-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n    };\n    localStorage.setItem(WEBSITES_KEY, JSON.stringify([\n        ...websites,\n        newWebsite\n    ]));\n    return newWebsite;\n};\nconst updateWebsite = async (id, website)=>{\n    if (true) {\n        return {\n            id,\n            ...website\n        };\n    }\n    initializeLocalStorage(); // Ensure storage is initialized\n    const websites = await getWebsites();\n    const websiteIndex = websites.findIndex((w)=>w.id === id);\n    if (websiteIndex === -1) throw new Error(`Website with ID ${id} not found`);\n    const updatedWebsite = {\n        ...websites[websiteIndex],\n        ...website\n    };\n    websites[websiteIndex] = updatedWebsite;\n    localStorage.setItem(WEBSITES_KEY, JSON.stringify(websites));\n    return updatedWebsite;\n};\nconst deleteWebsite = async (id)=>{\n    if (true) return;\n    initializeLocalStorage(); // Ensure storage is initialized\n    const websites = await getWebsites();\n    const filteredWebsites = websites.filter((w)=>w.id !== id);\n    localStorage.setItem(WEBSITES_KEY, JSON.stringify(filteredWebsites));\n};\nconst batchCreateWebsites = async (websiteItems)=>{\n    if (true) {\n        const timestamp = Date.now();\n        return websiteItems.map((item, index)=>({\n                ...item,\n                id: `server-mock-web-${timestamp}-${index}`\n            }));\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const websites = await getWebsites();\n    const newWebsites = websiteItems.map((item)=>({\n            ...item,\n            id: `web-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n        }));\n    localStorage.setItem('websites', JSON.stringify([\n        ...websites,\n        ...newWebsites\n    ]));\n    return newWebsites;\n};\n// Business Flow service functions\nconst getBusinessFlows = async ()=>{\n    if (true) return [];\n    initializeLocalStorage(); // Ensure storage is initialized\n    try {\n        const businessFlowsJson = localStorage.getItem(BUSINESS_FLOWS_KEY);\n        return businessFlowsJson ? JSON.parse(businessFlowsJson) : [];\n    } catch (error) {\n        console.error('Error getting business flows from localStorage:', error);\n        return [];\n    }\n};\nconst createBusinessFlow = async (businessFlowData)=>{\n    if (true) {\n        return {\n            id: `server-mock-bf-${Date.now()}`,\n            name: businessFlowData.name,\n            description: businessFlowData.description || '',\n            detailPageId: `bf_detail_server_mock`,\n            parentId: businessFlowData.parentId,\n            projects: 0,\n            resources: 0,\n            lastAccessed: new Date().toISOString(),\n            children: []\n        };\n    }\n    initializeLocalStorage(); // Ensure storage is initialized\n    const businessFlows = await getBusinessFlows();\n    const newId = `bf-${Date.now()}${Math.floor(Math.random() * 10000)}`.substring(0, 12);\n    const newBusinessFlow = {\n        id: newId,\n        name: businessFlowData.name,\n        description: businessFlowData.description || '',\n        detailPageId: `bf_detail_${newId}`,\n        parentId: businessFlowData.parentId,\n        projects: 0,\n        resources: 0,\n        lastAccessed: new Date().toISOString(),\n        children: []\n    };\n    let updatedFlows;\n    if (!businessFlowData.parentId) {\n        updatedFlows = [\n            ...businessFlows,\n            newBusinessFlow\n        ];\n    } else {\n        let parentFound = false;\n        const addRecursive = (flows)=>{\n            return flows.map((flow)=>{\n                if (flow.id === businessFlowData.parentId) {\n                    parentFound = true;\n                    return {\n                        ...flow,\n                        children: [\n                            ...flow.children || [],\n                            newBusinessFlow\n                        ]\n                    };\n                }\n                if (flow.children) {\n                    return {\n                        ...flow,\n                        children: addRecursive(flow.children)\n                    };\n                }\n                return flow;\n            });\n        };\n        updatedFlows = addRecursive(businessFlows);\n        if (!parentFound) {\n            console.warn(`Parent ID ${businessFlowData.parentId} not found for BusinessFlow. Adding to root level.`);\n            updatedFlows = [\n                ...businessFlows,\n                newBusinessFlow\n            ];\n        }\n    }\n    localStorage.setItem(BUSINESS_FLOWS_KEY, JSON.stringify(updatedFlows));\n    return newBusinessFlow;\n};\nconst batchCreateBusinessFlows = async (flowItems)=>{\n    if (true) {\n        const timestamp = Date.now();\n        return flowItems.map((item, index)=>({\n                id: `server-mock-bf-batch-${timestamp}-${index}`,\n                name: item.name,\n                description: item.description || '',\n                detailPageId: `bf_detail_batch_server_mock_${index}`,\n                parentId: item.parentId,\n                projects: 0,\n                resources: 0,\n                lastAccessed: new Date().toISOString(),\n                children: []\n            }));\n    }\n    initializeLocalStorage(); // Ensure storage is initialized\n    let allFlows = await getBusinessFlows();\n    const createdFlows = [];\n    for (const item of flowItems){\n        const newId = `bf-batch-${Date.now()}-${createdFlows.length}-${Math.random().toString(36).substr(2, 9)}`;\n        const newFlow = {\n            id: newId,\n            name: item.name,\n            description: item.description || '',\n            detailPageId: `bf_detail_batch_${newId}`,\n            parentId: item.parentId,\n            projects: 0,\n            resources: 0,\n            lastAccessed: new Date().toISOString(),\n            children: []\n        };\n        if (!item.parentId) {\n            allFlows.push(newFlow);\n        } else {\n            let parentFound = false;\n            const addAsChildRecursive = (flows, parentId, child)=>{\n                for(let i = 0; i < flows.length; i++){\n                    if (flows[i].id === parentId) {\n                        flows[i].children = [\n                            ...flows[i].children || [],\n                            child\n                        ];\n                        parentFound = true;\n                        return;\n                    }\n                    if (flows[i].children && flows[i].children.length > 0) {\n                        addAsChildRecursive(flows[i].children, parentId, child);\n                        if (parentFound) return;\n                    }\n                }\n            };\n            addAsChildRecursive(allFlows, item.parentId, newFlow);\n            if (!parentFound) {\n                console.warn(`Parent ID ${item.parentId} not found for batch BusinessFlow ${newFlow.name}. Adding to root.`);\n                allFlows.push(newFlow);\n            }\n        }\n        createdFlows.push(newFlow);\n    }\n    localStorage.setItem(BUSINESS_FLOWS_KEY, JSON.stringify(allFlows));\n    return createdFlows;\n};\n// Assistant service functions\nconst getAssistantItems = async ()=>{\n    if (true) return [];\n    initializeLocalStorage(); // Ensure storage is initialized\n    try {\n        const assistantItemsJson = localStorage.getItem(ASSISTANT_ITEMS_KEY);\n        return assistantItemsJson ? JSON.parse(assistantItemsJson) : [];\n    } catch (error) {\n        console.error('Error getting assistantItems from localStorage:', error);\n        return [];\n    }\n};\nconst createAssistantItem = async (item)=>{\n    if (true) {\n        return {\n            ...item,\n            id: `server-mock-${Date.now()}`\n        };\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const items = await getAssistantItems();\n    const newItem = {\n        ...item,\n        id: Date.now().toString()\n    };\n    localStorage.setItem('assistantItems', JSON.stringify([\n        ...items,\n        newItem\n    ]));\n    return newItem;\n};\nconst batchCreateAssistantItems = async (assistantItemsData)=>{\n    if (true) {\n        const timestamp = Date.now();\n        return assistantItemsData.map((item, index)=>({\n                ...item,\n                id: `server-mock-${timestamp}-${index}`\n            }));\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const items = await getAssistantItems();\n    const timestamp = Date.now();\n    const newItems = assistantItemsData.map((item, index)=>({\n            ...item,\n            id: `${timestamp + index}`\n        }));\n    localStorage.setItem('assistantItems', JSON.stringify([\n        ...items,\n        ...newItems\n    ]));\n    return newItems;\n};\n// Project service functions\nconst getProjects = async ()=>{\n    if (true) {\n        return [];\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    try {\n        const projectsJson = localStorage.getItem('projects');\n        if (!projectsJson) {\n            console.log('No projects found in localStorage during getProjects call.');\n            return [];\n        }\n        const parsedProjects = JSON.parse(projectsJson);\n        return Array.isArray(parsedProjects) ? parsedProjects : [];\n    } catch (error) {\n        console.error('Error getting projects from localStorage:', error);\n        return [];\n    }\n};\nconst createProject = async (project)=>{\n    if (true) {\n        return {\n            ...project,\n            id: `server-mock-P${Date.now()}`\n        };\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    try {\n        const projects = await getProjects();\n        const newId = `P${Date.now()}${Math.floor(Math.random() * 1000)}`.substring(0, 8).padStart(4, '0'); // Ensure some length\n        const newProject = {\n            ...project,\n            id: newId\n        };\n        const updatedProjects = [\n            ...projects,\n            newProject\n        ];\n        localStorage.setItem('projects', JSON.stringify(updatedProjects));\n        console.log(`Project created via createProject with ID ${newId}, total projects: ${updatedProjects.length}`);\n        return newProject;\n    } catch (error) {\n        console.error('Error creating project in localStorageService:', error);\n        throw new Error('Failed to create project in localStorageService');\n    }\n};\nconst updateProject = async (id, project)=>{\n    if (true) {\n        return {\n            id,\n            ...project\n        };\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    try {\n        const projects = await getProjects();\n        const projectIndex = projects.findIndex((p)=>p.id === id);\n        if (projectIndex === -1) throw new Error(`Project with ID ${id} not found for update.`);\n        const updatedProject = {\n            ...projects[projectIndex],\n            ...project\n        };\n        projects[projectIndex] = updatedProject;\n        localStorage.setItem('projects', JSON.stringify(projects));\n        console.log(`Project updated: ${id}`);\n        return updatedProject;\n    } catch (error) {\n        console.error('Error updating project in localStorageService:', error);\n        throw error;\n    }\n};\nconst deleteProject = async (id)=>{\n    if (true) return;\n    // ensureLocalStorageInitialized(); // No longer needed here\n    try {\n        const projects = await getProjects();\n        const filteredProjects = projects.filter((p)=>p.id !== id);\n        localStorage.setItem('projects', JSON.stringify(filteredProjects));\n        console.log(`Project deleted: ${id}`);\n    } catch (error) {\n        console.error('Error deleting project in localStorageService:', error);\n        throw error;\n    }\n};\nconst batchCreateProjects = async (projectItems)=>{\n    if (true) {\n        const timestamp = Date.now();\n        return projectItems.map((item, index)=>({\n                ...item,\n                id: `server-mock-P${timestamp}-${index}`\n            }));\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const projects = await getProjects();\n    const startIdx = projects.length > 0 ? Math.max(...projects.map((p)=>parseInt(p.id.substring(1), 10) || 0)) + 1 : 1;\n    const newProjects = projectItems.map((item, index)=>({\n            ...item,\n            id: `P${(startIdx + index).toString().padStart(3, '0')}`\n        }));\n    localStorage.setItem('projects', JSON.stringify([\n        ...projects,\n        ...newProjects\n    ]));\n    return newProjects;\n};\n// Resource service functions\nconst getResources = async ()=>{\n    if (true) return [];\n    // ensureLocalStorageInitialized(); // No longer needed here\n    try {\n        const resourcesJson = localStorage.getItem('resources');\n        return resourcesJson ? JSON.parse(resourcesJson) : [];\n    } catch (error) {\n        console.error('Error getting resources from localStorage:', error);\n        return [];\n    }\n};\nconst createResource = async (resource)=>{\n    if (true) {\n        return {\n            ...resource,\n            id: `server-mock-R${Date.now()}`\n        };\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const resources = await getResources();\n    const newId = `R${Date.now()}${Math.floor(Math.random() * 1000)}`.substring(0, 8).padStart(4, '0');\n    const newResource = {\n        ...resource,\n        id: newId\n    };\n    localStorage.setItem('resources', JSON.stringify([\n        ...resources,\n        newResource\n    ]));\n    return newResource;\n};\nconst updateResource = async (id, resource)=>{\n    if (true) {\n        return {\n            id,\n            ...resource\n        };\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const resources = await getResources();\n    const resourceIndex = resources.findIndex((r)=>r.id === id);\n    if (resourceIndex === -1) throw new Error(`Resource with ID ${id} not found for update.`);\n    const updatedResource = {\n        ...resources[resourceIndex],\n        ...resource\n    };\n    resources[resourceIndex] = updatedResource;\n    localStorage.setItem('resources', JSON.stringify(resources));\n    return updatedResource;\n};\nconst deleteResource = async (id)=>{\n    if (true) return;\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const resources = await getResources();\n    const filteredResources = resources.filter((r)=>r.id !== id);\n    localStorage.setItem('resources', JSON.stringify(filteredResources));\n};\nconst batchCreateResources = async (resourceItems)=>{\n    if (true) {\n        const timestamp = Date.now();\n        return resourceItems.map((item, index)=>({\n                ...item,\n                id: `server-mock-R${timestamp}-${index}`\n            }));\n    }\n    // ensureLocalStorageInitialized(); // No longer needed here\n    const resources = await getResources();\n    const startIdx = resources.length > 0 ? Math.max(...resources.map((r)=>parseInt(r.id.substring(1), 10) || 0)) + 1 : 1;\n    const newResources = resourceItems.map((item, index)=>({\n            ...item,\n            id: `R${(startIdx + index).toString().padStart(3, '0')}`\n        }));\n    localStorage.setItem('resources', JSON.stringify([\n        ...resources,\n        ...newResources\n    ]));\n    return newResources;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/localStorageService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&page=%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffeishu%2Fwebsites%2Fbatch%2Froute.ts&appDir=D%3A%5CCode%5CBusiness_Process_Management_Platform%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCode%5CBusiness_Process_Management_Platform&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();